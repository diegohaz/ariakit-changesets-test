name: release

on:
  push:
    branches: [main, next, v*]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      # Test without this
      # - name: Creating .npmrc
      #   run: |
      #     cat << EOF > "$HOME/.npmrc"
      #       email=hazdiego@gmail.com
      #       //registry.npmjs.org/:_authToken=$NPM_TOKEN
      #     EOF
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release Pull Request
        uses: changesets/action@v1
        with:
          version: node scripts/release/version.js
          publish: node scripts/release/publish.js
          # npm dist-tag add package@version next
          # npm dist-tag add package@version v1
          # npm dist-tag add package@version v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          RELEASE_TAG: ${{ github.ref_name == 'main' && 'latest' || github.ref_name }}
